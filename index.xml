<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cory Code</title><link>https://huweim.cn/</link><description>Recent content on Cory Code</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Athul</copyright><lastBuildDate>Fri, 12 Mar 2021 16:54:33 +0800</lastBuildDate><atom:link href="https://huweim.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>读田渊栋博士《博士五年总结系列》</title><link>https://huweim.cn/posts/summary_of_phd/</link><pubDate>Fri, 12 Mar 2021 16:54:33 +0800</pubDate><guid>https://huweim.cn/posts/summary_of_phd/</guid><description>读田渊栋博士《博士五年总结系列》 ​ 有幸找到了田渊栋博士的《博士五年总结系列》文章，对文章的内容进行品读、摘抄，同时慢慢加入自己的理解。希望能从文字中去体会到田渊栋博士走过的那五年，希望自己能在未来发展上产生更加深入的思考。
一 首先，心静下来才能钻进某个领域里认真做事。 真要体会大自然的美丽，那是一 定要涉足别人达不到的地方，要有目标有耐心有毅力，做长久的打算。 其次，有毅力有决心不一定能成事，方法也是不可少的。 最好的态 度是“不抱怨，不解释”，把自己力所能及的事情做好，把自己的错误搬回家，好 好分析，才能有所进步。 因为没有实现的理想，对他人而言，一文不值。 克服困难的过程中，没人喝彩。 Research Tips 第一，要喜欢自己的研究题目。做研究有内心动力(motivation)是非常重要的。 如果自己确实喜欢探索，喜欢解难题，但是导师的方向自己不喜欢怎么办？我的答 案是，多发挥主观能动性，找一个喜欢的小点慢慢扩大。 先找一个两边都能接受的题目，把它做好。 My heart is in the work 需要培养思考的习惯，提高思考的效率。 为达到这一步，一开始需要大量 的投入来找到适合自己的正确方案。 这句话背后是有很多实践的。 可能会很不习惯，想到晚上睡不着，做事吃饭都没心思，生活琐事全都不管，俗话说是“入魔了”。 像我经常有做梦做到自己要 思考的问题，或者每天一早还没完全醒来，就想着某个问题要怎么解，结果真醒来 一看发现全想错了-_-。 在这个阶段，挫折感会特别强烈，会有放弃的念头。 但是，只要坚持下去，大脑会适应，会成习惯，效率会高，会知道一个问题中有哪些地方是关键，会知道思考到什么地步是可以停手的存盘点。 然后你就有了一具不论何时 何地都能进行后台运行的思考机器，能够积累上每天的边角时间，每时每刻在ᨀ升 进步。 正如一句话所说，不疯魔，怎成活。 第三，有思路(idea)就写下来。 写下来本身就是一种“我已经完成了什么”的标志，对士气是很鼓舞 的，也有利于下一次从中断点恢复思考。 第四，多看看别人的工作，但别看太多，抓住主线就好。 我目前认为的最好办法，莫过于在看完几篇本领域最重要的文 章后认真总结，猜出大部分人的路数还有各自方法的优缺点，然后在面对新文章时 采用跳跃式读法，边看边猜，猜对有奖。 有了一定的熟练度之后，看了一部分去猜想作者的idea，这个不是第一次听到，但还是很震撼。 二 选导师，他做什么研究并不是最重要的，比这更重要 的，是人品及交流和表达能力。 Writing 初级 paper不光要有先做啥，再做啥，最后做啥，实验结果是啥，还要有 为什么这么做，原因是什么，激发了怎样的思考，这样的方法对什么样的数据有效，有什么局限。 举个例子，写目标函数是什么，如何用梯度下降优化，数学上就 两个公式，但是段落里可以说明如何选初始点，初始点在这个具体应用中的意义何 在，如何取步长，为何这样选，收敛速度通常多快，哪里可以加速，哪里可以并行 化再加 GPU，等等，这样内容就丰富多了。 克服了这两点，做到开局有理有据，正文言之有物，实验让人信服，那这篇文章基 本上可以中稿了。接下来，就可以进入高级模式了。 中高级 首先，立意要高远。 一篇文章规矩着写，说“我们加了新特征，因为新特征针对数 据集的某些特性建模，实验效果更好”，虽然基本可被录用，但一般不会出彩； 如果说“我们提了新的框架，统一了以前的诸多方法，在这个框架下，算法能自动分析数据加入新特征，实验效果更好”，那这篇就有戏。 其次，故事要流畅。 作者老板说过，一篇好的文章，就如同带着读者在一个花园里行走，路面平坦舒适，左边有山，右边有水，引人入胜，读者漫步欣赏美景，走过亭台楼阁，一点不费劲，一下子就逛完所有还意犹未尽。 细节上，全篇重要的论点要适当重复，每次出现都要和 上下文语境相符，无聊冗长的段落适当精简，但必要的实验步骤需要交代； 每一段 都要有总起有概括，像是花园的指路牌，让读者不至于晕头转向； 不设弯路，反复 推敲逻辑关系，能用一层逻辑说清的绝不用两层，能用简单故事说明白的不用复杂 公式，就算有复杂公式也放进附录里； 繁简要有计划，细节要略写以免让人费解， 主干则要用重笔让人印象深刻； 插图要不言自明，要出现在该出现的地方，能恰当 地作成段落注解； 语句不能太长，避免从句套从句，长短结合比较好，等等。 三 Talk 克服困局 一方面是充分的准备，另一方面是对 自己研究课题的自信。 自己热爱它，为它自豪，愿意讲给别人听，也知道自己如何 遣词造句，那这时大脑就会聚焦到内容上，说着说着就入情入境，英语也就自然地 变得慢了，流畅了。 等到说完，发现自己居然说得还可以，那下一次就更不会紧张 ，久而久之，终于就可以摆脱恶性循环，进入良性轨道。 如何才是好的讲稿呢？ 如同写作一样，最好的演讲是一个有唯一主题的流畅故事。 所谓流畅故事，是指幻 灯片和幻灯片之间要有自然过渡，让人不知不觉就听完整个演讲，而不觉得有什么 转折生硬的地方。 相比作文，演讲的流畅性更为重要，因为读者看文章时可以细细 琢磨，听众听演讲时则是一晃而过。 为了流畅性，一个好的演讲可以不惜牺牲大量 细节，只把最重要最易记忆的主线说出来—— 但条件是，这最重要的主线不能失了 应有的大转折和大逻辑，不能让人觉得太过简单无聊，或太过跳跃而没有说服力。 找到主线这个点，作者反复强调，确实最需要磨练才能掌握的一个地方 最好的平衡点，在于“意料之外，情理之中”，听完有一种“原来如此，我怎么没 有想到”的感受。 一个看似无关却很有效的办法是 先把幻灯片做好，写好演讲词，然后看看是否能 在规定时间脱稿讲得出来。 先有一个雏形 最好的演讲，是看了幻灯片自然而然能说出句子，而不 需要死记硬背，转折流畅，故事清楚。 另一个常见的错误，是把自己想说的话写在幻灯 片上。但其实幻灯片上写的，应该是在演讲者说完之后，最希望观众记得的内容 （所谓的“take home message”)。 为此，一张幻灯片来来回回做个几次都是正常 的，往往是初稿的字数非常多，往后思考越深则字数越少，到最后只放一张图或者 两张图，但在观众看来，一望即明。 好的幻灯片有几种类型 可以只含一张大图，或互有联系的若干图片，或一个前人 工作的列表，或一件事物的优劣二分法，或一个算法的三个主要步骤，或一些事物 的相互关系，等等。 一句话，如果盯着它十秒钟没看出来重点是什么，那就打回去 重做吧。 四 About time management</description></item><item><title>MPI Intro and Practice</title><link>https://huweim.cn/posts/mpi_intro_and_practice/</link><pubDate>Tue, 09 Mar 2021 22:36:19 +0800</pubDate><guid>https://huweim.cn/posts/mpi_intro_and_practice/</guid><description>MPI Intro and Practice Intro Definition wiki:
Message Passing Interface (MPI) is a standardized and portable message-passing standard designed by a group of researchers from academia and industry to function on a wide variety of parallel computing architectures. Feature an interface, not a programming language Main model of HPC a cross-language communication protocol Functions Communication Point-to-point communication Send Recv Collective communication Broadcast, scatter/ gather, all to all, reduce, scan, barrier Almost all parallel programs can be described using the message passing model.</description></item><item><title>Git中常用的操作</title><link>https://huweim.cn/posts/git/</link><pubDate>Mon, 08 Mar 2021 19:12:40 +0800</pubDate><guid>https://huweim.cn/posts/git/</guid><description>Git中常用的操作 1. Remote Repo 1.1 Add Remote Repo $ git remote add origin git@github.com:huweim/repo_name.git 1.2 Delete Remote Repo Add a wrong remote repo, we could delete it. $ git remote -v origin git@github.com:huweim/huweim.github.io.git (fetch) origin git@github.com:huweim/huweim.github.io.git (push) Delete it $ git remote rm origin 2. Clone from Remote Repo $ git clone git@github.com:huweim/repo_name.git $ git clone https://github.com/huweim/repo_name.git 很多时候http速度很慢，会clone失败报错，所以建议使用ssh。 3. Delete 3.1 删除工作区文件 与win中右键删除没有区别</description></item><item><title>My First Post</title><link>https://huweim.cn/posts/my-first-post/</link><pubDate>Mon, 08 Mar 2021 11:24:04 +0800</pubDate><guid>https://huweim.cn/posts/my-first-post/</guid><description>About 3 days, it finally works!</description></item></channel></rss>