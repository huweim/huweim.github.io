<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>进程 on Cory Code</title><link>https://huweim.github.io/tags/%E8%BF%9B%E7%A8%8B/</link><description>Recent content in 进程 on Cory Code</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Athul</copyright><lastBuildDate>Mon, 29 Nov 2021 23:00:09 +0800</lastBuildDate><atom:link href="https://huweim.github.io/tags/%E8%BF%9B%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux任务调度</title><link>https://huweim.github.io/posts/%E7%BC%96%E7%A8%8B_linux%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</link><pubDate>Mon, 29 Nov 2021 23:00:09 +0800</pubDate><guid>https://huweim.github.io/posts/%E7%BC%96%E7%A8%8B_linux%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</guid><description>0. 前言 记录一下 Linux 中 fg、bg、jobs、&amp;amp;、ctrl + z 等相关指令对任务进程的操作。
也正好借此机会学习一下进程（process）的概念
1. Process 1.0 进程类型 前台进程（交互式进程） 这些进程由终端会话初始化和控制。换句话说，需要有一个连接到系统中的用户来启动这样的进程；它们不是作为系统功能/服务的一部分自动启动。 后台进程 1.1 并发执行 To run commands concurrently you can use the &amp;amp; command separator
~$ command1 &amp;amp; command2 &amp;amp; command3 This will start command1, then runs it in the background. The same with command2. Then it starts command3 normally.
这样的话 command3 是在前台运行
The output of all commands will be garbled together, but if that is not a problem for you, that would be the solution.</description></item></channel></rss>