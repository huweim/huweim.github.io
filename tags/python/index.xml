<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Cory Code</title><link>https://huweim.github.io/tags/python/</link><description>Recent content in Python on Cory Code</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Athul</copyright><lastBuildDate>Wed, 08 Dec 2021 09:05:41 +0800</lastBuildDate><atom:link href="https://huweim.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python处理输出log信息并绘图</title><link>https://huweim.github.io/posts/%E7%BC%96%E7%A8%8B_python%E5%A4%84%E7%90%86%E8%BE%93%E5%87%BAlog%E4%BF%A1%E6%81%AF%E5%B9%B6%E7%BB%98%E5%9B%BE/</link><pubDate>Wed, 08 Dec 2021 09:05:41 +0800</pubDate><guid>https://huweim.github.io/posts/%E7%BC%96%E7%A8%8B_python%E5%A4%84%E7%90%86%E8%BE%93%E5%87%BAlog%E4%BF%A1%E6%81%AF%E5%B9%B6%E7%BB%98%E5%9B%BE/</guid><description>0. 前言 修改 GPGPU-Sim 并跑 benchmark，如果一次用12个benchmark，3种调度算法，那么一次会生成36个 output log。需要使用 python 脚本可视化这些数据来进行 high level 的分析，因此自己写了一个脚本进行输出数据的可视化工作。
需要两个绘图工具
对于单个 benchmark，分析其 ipc，cache hit/miss，mem_stall 等等 对于多个 benchmark，分析总体的 ipc，cache hit/miss，mem_stall 等等 1. 正则表达式 1.1 实例 def read_string(file,metrics): output={} for it_metrics in metrics: if(it_metrics==&amp;#34;gpu_ipc&amp;#34;): pattern=re.compile(it_metrics+&amp;#34; =(\s+)(\d+\.\d+)&amp;#34;) elif(it_metrics==&amp;#34;Stall&amp;#34;): pattern=re.compile(it_metrics+&amp;#34;:(\d+)&amp;#34;) else: pattern=re.compile(it_metrics+&amp;#34; = (\d+)&amp;#34;) output_sum=0 for i,line in enumerate(open(get_file_path()+file)): for match in re.finditer(pattern, line): if(it_metrics==&amp;#34;gpu_ipc&amp;#34;): output_part=list(match.group(2)) else: output_part=list(match.group(1)) output_part=float(&amp;#39;&amp;#39;.join(output_part)) output_sum+=output_part output[it_metrics]=output_sum return output 其实没有找到最舒服的正则表达式，理想情况是读取到表示数据的一串字符串，然后直接转化为浮点数。但是各种匹配方法似乎都是一次匹配一个数字/字符串，所以先使用现成的。
for i,line in enumerate(open(file)) 遍历 log 的每一行，一定要加上 i 否则会报错。</description></item></channel></rss>