<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Weiming Hu</title><link>https://huweim.github.io/post/</link><description>Recent content in Posts on Weiming Hu</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 11 Feb 2025 14:04:29 +0000</lastBuildDate><atom:link href="https://huweim.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Makefile学习和实践</title><link>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_makefile%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AE%9E%E8%B7%B5/</link><pubDate>Thu, 23 Mar 2023 11:00:42 +0800</pubDate><guid>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_makefile%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AE%9E%E8%B7%B5/</guid><description>&lt;h1 id="1-简介和基础知识">1. 简介和基础知识&lt;/h1>
&lt;p>C语言中文网 &lt;a href="http://c.biancheng.net/view/7096.html">http://c.biancheng.net/view/7096.html&lt;/a>&lt;/p>
&lt;h2 id="11-makefile文件是什么">1.1 Makefile文件是什么？&lt;/h2>
&lt;h3 id="111-definition">1.1.1 Definition&lt;/h3>
&lt;p>Makefile是什么？&lt;/p>
&lt;ul>
&lt;li>用于描述编译规则的工程文件
&lt;ul>
&lt;li>即哪些文件先编译，哪些文件无需编译&lt;/li>
&lt;li>使得项目的编译自动化，不需要每次都手动输入一堆源文件和参数。&lt;/li>
&lt;li>可以理解为一个脚本语言，类似 Shell, Perl, Python&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Windows 下的集成开发环境（IDE）已经内置了 Makefile，或者说会自动生成 Makefile，无需手写&lt;/p></description></item><item><title>自己动手部署transformer模型 by huggingface</title><link>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E9%83%A8%E7%BD%B2transformer%E6%A8%A1%E5%9E%8B_huggingface/</link><pubDate>Sun, 23 Oct 2022 11:00:17 +0800</pubDate><guid>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E9%83%A8%E7%BD%B2transformer%E6%A8%A1%E5%9E%8B_huggingface/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>这部分内容还是很重要的，预计会设计常见的 pytorch 模型部署方法，理解框架中，每个模块在做什么。另外，这也是工程上必备的技能。&lt;/p>
&lt;h2 id="01-模型及下载地址">0.1 模型及下载地址&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Model&lt;/th>
 &lt;th>Repo&lt;/th>
 &lt;th>Paper&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ResNet (18: 12M; 50: 26M; 152: 60M)&lt;/td>
 &lt;td>&lt;a href="https://github.com/pytorch/vision/blob/main/torchvision/models/resnet.py">https://github.com/pytorch/vision/blob/main/torchvision/models/resnet.py&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BERT (110 / 330M)&lt;/td>
 &lt;td>&lt;a href="https://github.com/NVIDIA/DeepLearningExamples/tree/master/PyTorch/LanguageModeling/BERT">https://github.com/NVIDIA/DeepLearningExamples/tree/master/PyTorch/LanguageModeling/BERT&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://arxiv.org/abs/1810.04805">https://arxiv.org/abs/1810.04805&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GPT-2 (1.5B)&lt;/td>
 &lt;td>&lt;a href="https://github.com/openai/gpt-2">https://github.com/openai/gpt-2&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>OPT (125 / 350M; 1.3 / 2.7 / 6.7 / 13 / 30 / 66 / 175B)&lt;/td>
 &lt;td>&lt;a href="https://github.com/facebookresearch/metaseq">https://github.com/facebookresearch/metaseq&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://arxiv.org/pdf/2205.01068.pdf">https://arxiv.org/pdf/2205.01068.pdf&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BLOOM (560M; 1.1 / 1.7 / 3 / 7.1 / 176B)&lt;/td>
 &lt;td>&lt;a href="https://huggingface.co/docs/transformers/model_doc/bloom">https://huggingface.co/docs/transformers/model_doc/bloom&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>T5 (60 / 220 / 770M; 3 / 11B)&lt;/td>
 &lt;td>&lt;a href="https://github.com/google-research/text-to-text-transfer-transformer#released-model-checkpoints">https://github.com/google-research/text-to-text-transfer-transformer#released-model-checkpoints&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://jmlr.org/papers/volume21/20-074/20-074.pdf">https://jmlr.org/papers/volume21/20-074/20-074.pdf&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="02-模型下载方法">0.2 模型下载方法&lt;/h2>
&lt;p>2023-07-08 20:10:12，重新回顾 22 年关于大模型研究的工作。从 chatgpt 爆火之后，大模型应用的框架变得火热，语言模型的社区也变得火热起来。准备在 ant_ext 工作中加入一些新的模型的评估，但是期智连接 huggingface 的网络老是抽风，导致试图从 huggingface 下载模型时出现错误。现在总结一些其他的下载方法。&lt;/p></description></item><item><title>（转载）Having Effective Meetings Between Advisors and Students</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_having-effective-meetings-between-advisors-and-students/</link><pubDate>Mon, 26 Sep 2022 02:42:41 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_having-effective-meetings-between-advisors-and-students/</guid><description>&lt;blockquote>
&lt;p>Title: Having Effective Meetings Between Advisors and Students
by Mingyu Gao on Nov 2, 2020 | Tags: Academia, Advice, Students&lt;/p>
&lt;/blockquote>
&lt;p>原文链接：https://www.sigarch.org/having-effective-meetings-between-advisors-and-students/#undefined&lt;/p></description></item><item><title>论文阅读的笔记模板</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%9A%84%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</link><pubDate>Fri, 23 Sep 2022 11:15:41 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%9A%84%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</guid><description>&lt;h1 id="论文标题-title">论文标题 Title&lt;/h1>
&lt;p>会议/期刊的信息，例：&lt;strong>MICRO'21&lt;/strong>&lt;/p>
&lt;p>&lt;strong>作者信息：&lt;/strong> 大概总结一下一作和其导师目前的情况，之前的一些工作，目前的机构等等。&lt;/p>
&lt;h2 id="abs">Abs&lt;/h2>
&lt;p>总结一下摘要。&lt;/p>
&lt;p>浏览文章的图片，可以稍微总结一下图片传递的信息。&lt;/p></description></item><item><title>Python 语法学习</title><link>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_python%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 14 Sep 2022 11:15:41 +0800</pubDate><guid>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_python%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</guid><description>&lt;h1 id="1-attribute">1. Attribute&lt;/h1>
&lt;h2 id="11-string">1.1 string&lt;/h2>
&lt;p>用 for 循环实现了 list 中的元素转为 string，目的是用来索引。for 感觉比较麻烦，不易读也不优雅，有没有更好的方法？&lt;/p>
&lt;h3 id="111-operation">1.1.1 Operation&lt;/h3>
&lt;h4 id="1111-slice">1.1.1.1 slice&lt;/h4>
&lt;div class="highlight-container">

 &lt;button class="copy-code-btn outline">Copy&lt;/button>

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(b[&lt;span style="color:#ae81ff">2&lt;/span>:&lt;span style="color:#ae81ff">5&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># llo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(b[&lt;span style="color:#ae81ff">2&lt;/span>:])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># llo, World! &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h4 id="1112-replace">1.1.1.2 replace&lt;/h4>
&lt;div class="highlight-container">

 &lt;button class="copy-code-btn outline">Copy&lt;/button>

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>string&lt;span style="color:#f92672">.&lt;/span>replace(oldvalue, newvalue, count)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># replaces a specified phrase with another specified phrase.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h4 id="1113-split">1.1.1.3 Split&lt;/h4>
&lt;p>The split() method splits a string into a list&lt;/p></description></item><item><title>Tips to Become a Better (Computer Science) Ph.D. Student (By Ziyang Xu)</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_tips-to-become-a-better-computer-science-ph.d.-student/</link><pubDate>Sun, 28 Aug 2022 00:04:17 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_tips-to-become-a-better-computer-science-ph.d.-student/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://www.cs.princeton.edu/~ziyangx/graduate-advice/">https://www.cs.princeton.edu/~ziyangx/graduate-advice/&lt;/a>
&lt;strong>作者信息&lt;/strong>： 转载自北大本科生 Ziyang Xu，本科在梁云那里实习，现在是 princeton 4th year phd，导师是 Greg Chan&lt;/p>
&lt;/blockquote>
&lt;h1 id="1-5-topics">1. 5 Topics&lt;/h1>
&lt;h1 id="11-research--course">1.1 Research &amp;gt; Course&lt;/h1>
&lt;p>Young Ph.D. students tend to spend too much time on courses. However, research outweighs courses.&lt;/p>
&lt;p>&lt;strong>Take courses with a grain of salt&lt;/strong>&lt;/p></description></item><item><title>Tips for a New Computer Architecture PhD Student (By Swapnil Haria)</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_tips-for-a-new-computer-architecture-phd-student/</link><pubDate>Sat, 27 Aug 2022 23:57:17 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_tips-for-a-new-computer-architecture-phd-student/</guid><description>&lt;p>原文网址：https://www.sigarch.org/tips-for-a-new-computer-architecture-phd-student/&lt;/p></description></item><item><title>What My Mentors Taught Me (By Shan Lu)</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_what-my-mentors-taught-me-by-shan-lu/</link><pubDate>Sat, 27 Aug 2022 23:57:17 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_what-my-mentors-taught-me-by-shan-lu/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>视频地址：https://www.youtube.com/watch?v=lOOBJix9-Dw&amp;amp;t=5s&lt;/p>
&lt;p>这是来自卢山老师的 talk&lt;/p>
&lt;p>shan lu 老师目前是芝加哥大学的教授，计算机系统领域的大牛。&lt;/p></description></item><item><title>Hugo 文章页面添加固定目录栏</title><link>https://huweim.github.io/post/blog_hugo_%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E5%9B%BA%E5%AE%9A%E7%9B%AE%E5%BD%95/</link><pubDate>Sun, 14 Aug 2022 19:33:17 +0800</pubDate><guid>https://huweim.github.io/post/blog_hugo_%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E5%9B%BA%E5%AE%9A%E7%9B%AE%E5%BD%95/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>阅读博客文章时有一个固定的目录会舒服很多，现在就来探索一下怎么添加这个功能。&lt;/p>
&lt;h1 id="1-固定目录">1. 固定目录&lt;/h1>
&lt;p>以主题 &lt;code>jane&lt;/code> 为例，在文件 &lt;code>theme/jane/layouts/post/single.html&lt;/code> 中存放着如何显示 post。根据文件中的代码，关于 table of content 的设定存放在 &lt;code>theme/jane/layouts/partials/post/toc.html&lt;/code>&lt;/p></description></item><item><title>PyTorch 学习</title><link>https://huweim.github.io/post/%E6%96%87%E6%A1%A3_pytorch%E5%AD%A6%E4%B9%A0/</link><pubDate>Thu, 28 Jul 2022 16:05:35 +0800</pubDate><guid>https://huweim.github.io/post/%E6%96%87%E6%A1%A3_pytorch%E5%AD%A6%E4%B9%A0/</guid><description>&lt;h1 id="1-python-模块">1. Python 模块&lt;/h1>
&lt;h2 id="11-parser-模块">1.1 parser 模块&lt;/h2>
&lt;h3 id="111-parseradd_argument">1.1.1 parser.add_argument()&lt;/h3>
&lt;p>在命令行给代码赋值，不需要反复在 python 中修改代码。&lt;/p>
&lt;div class="highlight-container">

 &lt;button class="copy-code-btn outline">Copy&lt;/button>

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--file-dir&amp;#39;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>str, required&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Input file directory&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--dataset&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cifar10&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;dataset name&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--dataset_path&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/state/partition/imagenet-raw-data&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;dataset path&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--model&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;resnet18&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;model name&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--train&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>, action&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;store_true&amp;#39;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;train&amp;#39;&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>&lt;code>action&lt;/code>: &lt;code>-train&lt;/code> 设置成一个开关，&lt;/p></description></item><item><title>国内硕博如何提升自己的英语</title><link>https://huweim.github.io/post/%E5%8D%9A%E5%AE%A2_%E5%9B%BD%E5%86%85%E5%8D%9A%E5%A3%AB%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%B7%B1%E7%9A%84%E8%8B%B1%E8%AF%AD/</link><pubDate>Sat, 16 Jul 2022 16:39:35 +0800</pubDate><guid>https://huweim.github.io/post/%E5%8D%9A%E5%AE%A2_%E5%9B%BD%E5%86%85%E5%8D%9A%E5%A3%AB%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%B7%B1%E7%9A%84%E8%8B%B1%E8%AF%AD/</guid><description>&lt;p>这个是最近（2022-07-16 16:09:15）我一直在思考的问题。因为之后可能会选择在国内度过自己的博士生涯。目前的英语水平可以说是完全不够的。并不是说 paper 看多了，英语水平就上去了。听说读写是耦合在一起的，没有国外的英文环境，就需要有意识地去提升自己的英语水平。&lt;/p></description></item><item><title>VSCode, Chrome 常用快捷键</title><link>https://huweim.github.io/post/%E5%B7%A5%E5%85%B7_%E5%BF%AB%E6%8D%B7%E9%94%AE_vscode_chrome/</link><pubDate>Fri, 10 Jun 2022 15:27:08 +0800</pubDate><guid>https://huweim.github.io/post/%E5%B7%A5%E5%85%B7_%E5%BF%AB%E6%8D%B7%E9%94%AE_vscode_chrome/</guid><description>&lt;h1 id="1-vscode">1. VSCode&lt;/h1>
&lt;p>&lt;strong>目前生疏但是需要常用的&lt;/strong> 2022-06-10 15:14:48&lt;/p>
&lt;ul>
&lt;li>&amp;#x2b50; 选择所有当前选中的字符（可以理解为全局版的 Ctrl + D）: Ctrl + Shift + L&lt;/li>
&lt;li>在选中行末尾插入光标：Alt + Shift + i&lt;/li>
&lt;li>在右侧打开 Markdown 预览：Ctrl + K, V&lt;/li>
&lt;li>查看定义：Alt + F12；只是小窗查看，比较方便，注意跳转和查看的区别&lt;/li>
&lt;li>重新打开最后关闭的标签页：Ctrl + Shift + T&lt;/li>
&lt;li>向左切换标签：Ctrl + Tab / Ctrl + PgDn&lt;/li>
&lt;li>向右切换标签：Ctrl + Shift + Tab / Ctrl + PgUp&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>快捷键的意义不在于记住每一个键位，而是你需要知道某个操作是可以通过快捷键达到的。当你需要多次重复这个操作时，可以去查找这个快捷键。&lt;/p></description></item><item><title>（转载）MLSys 个方向综述</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E8%BD%AC%E8%BD%BDmlsys-%E4%B8%AA%E6%96%B9%E5%90%91%E7%BB%BC%E8%BF%B0/</link><pubDate>Mon, 09 May 2022 22:17:43 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E8%BD%AC%E8%BD%BDmlsys-%E4%B8%AA%E6%96%B9%E5%90%91%E7%BB%BC%E8%BF%B0/</guid><description>&lt;p>最近在试着寻找ML + sys可做的方向，发现涉及到的坑太多了，有点眼花缭乱的感觉&amp;hellip;&amp;hellip;不如写点东西总结一哈，帮自己理一下思路。&lt;/p></description></item><item><title>cmake 目录结构和使用</title><link>https://huweim.github.io/post/%E5%B7%A5%E5%85%B7_cmake-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 09 May 2022 22:17:43 +0800</pubDate><guid>https://huweim.github.io/post/%E5%B7%A5%E5%85%B7_cmake-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>cuTLASS 使用到了 cmake，之前没有接触过，先学习一下他的目录结构和编译过程。&lt;/p>
&lt;p>2023-03-16 11:25:11，在学习一个工具时，Getting Started 或许是最快的入门方式。&lt;/p></description></item><item><title>Hugo_让你的博客被Google收录</title><link>https://huweim.github.io/post/blog_hugo_%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%ABgoogle%E6%94%B6%E5%BD%95/</link><pubDate>Mon, 09 May 2022 22:17:43 +0800</pubDate><guid>https://huweim.github.io/post/blog_hugo_%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%ABgoogle%E6%94%B6%E5%BD%95/</guid><description>&lt;h1 id="1-step">1. Step&lt;/h1>
&lt;p>网站在没有提交搜索引擎收录之前，直接搜索你网站的内容是搜不到的，因为搜索引擎不会去检索你的Github仓库。下面的解决方法&lt;/p>
&lt;h2 id="11-check-是否被谷歌收录">1.1 Check 是否被谷歌收录&lt;/h2>
&lt;p>打开谷歌搜索，在搜索框中输入&lt;/p></description></item><item><title>编译运行 CUTLASS 和 cuBLAS</title><link>https://huweim.github.io/post/%E5%AE%9E%E9%AA%8C_%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8Ccutlass%E5%92%8Ccublas/</link><pubDate>Mon, 09 May 2022 22:17:43 +0800</pubDate><guid>https://huweim.github.io/post/%E5%AE%9E%E9%AA%8C_%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8Ccutlass%E5%92%8Ccublas/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>内容包括根据官方文档运行 CUTLASS 的实例，过程中遇到的一些问题，在 GPGPU-Sim 上运行 CUTLASS，阅读官方 doc 的笔记。&lt;/p>
&lt;p>包括根据官方文档运行 cuBLAS 的实例，过程中遇到的问题。&lt;/p></description></item><item><title>关于 Deep Work</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_deep_work/</link><pubDate>Sun, 08 May 2022 20:56:54 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_deep_work/</guid><description>&lt;h2 id="01-知乎">0.1 知乎&lt;/h2>
&lt;p>知乎一位作者写的自我观察非常好，在我需要去完成论文的那段时间，我也是进入了这样一种状态。这个任务必须去交付（DDL 4.14），而且需要交互（修改之后给娄老师，并且完成娄老师交代的改动），是一种紧张，紧凑的任务，但是不觉得效率很高，写初稿反而磕磕盼盼，但是事后来看，在一段比较短的时间内（4.4-4.13）产出了一篇有结构的初稿并且慢慢完善并投稿。而现在，你需要记住、重拾这种状态，并把他融入到你的日常工作中。&lt;/p></description></item><item><title>如何读论文（李沐）</title><link>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E5%A6%82%E4%BD%95%E8%AF%BB%E8%AE%BA%E6%96%87%E6%9D%8E%E6%B2%90/</link><pubDate>Sun, 08 May 2022 20:16:17 +0800</pubDate><guid>https://huweim.github.io/post/%E6%80%BB%E7%BB%93_%E5%A6%82%E4%BD%95%E8%AF%BB%E8%AE%BA%E6%96%87%E6%9D%8E%E6%B2%90/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>最近（2022-05-08 16:40:17）看到了李沐的这个系列，之前没看过。其实读研以来陆陆续续也看过很多阅读文章，写文章的技巧，教程等等，自己也有一些感触和经验。而最近做完 GPU 微架构相关的一部分课题之后，恰好会接触一个比较新的领域。去读这种新的领域的文章，慢慢开拓到熟悉，也是一种体验。正好这个时间点，就结合自己之前读论文的经验，学到的技巧，结合李沐大神在视频中传授的方法，以及他阅读和看待文章的视角，来做一个总结和记录。&lt;/p></description></item><item><title>Matplotlib</title><link>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_matplotlib/</link><pubDate>Tue, 19 Apr 2022 20:29:07 +0800</pubDate><guid>https://huweim.github.io/post/%E7%BC%96%E7%A8%8B_matplotlib/</guid><description>&lt;h1 id="1-plot">1. plot&lt;/h1>
&lt;h2 id="11-hist">1.1 hist&lt;/h2>
&lt;div class="highlight-container">

 &lt;button class="copy-code-btn outline">Copy&lt;/button>

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>data &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">7&lt;/span>,&lt;span style="color:#ae81ff">64&lt;/span>,&lt;span style="color:#ae81ff">66&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>hist(data, bins&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>, label&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;weight&amp;#34;&lt;/span>)	&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="111-参数">1.1.1 参数&lt;/h3>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>bins，直方图的 bucket，bins = 3 表示将区间分为 3 buckets。数值范围是 0-66，那么大概分为 0-22，23-45，45-67 三个 bucket，然后根据 &lt;code>data&lt;/code> 中的情况，往这几个 bucket 投票/计数。&lt;/li>
&lt;li>range，x 轴的显示范围&lt;/li>
&lt;/ul>
&lt;h2 id="12-通用设置">1.2 通用设置&lt;/h2>
&lt;h3 id="121-label-设置">1.2.1 label 设置&lt;/h3>
&lt;p>给出y轴的名称&lt;/p></description></item><item><title>CSAPP阅读笔记</title><link>https://huweim.github.io/post/%E6%95%99%E6%9D%90_csapp%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 19 Apr 2022 18:34:28 +0800</pubDate><guid>https://huweim.github.io/post/%E6%95%99%E6%9D%90_csapp%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid><description>&lt;h1 id="0-前言">0. 前言&lt;/h1>
&lt;p>最近刚把 adaptive 调度的一部分工作写成了文章，在 SOCC DDL（4.14） 投了出去。这段时间希望浏览一下 CSAPP，一方面是复习体系结构中的一些知识，另一方面再构建一下对整个计算机结构，操作系统，C语言的了解和认识。&lt;/p></description></item></channel></rss>